{
  # Spark relation config
  spark: {
    app: {
      name: Spark Writer
    }

    driver: {
      cores: 1
      maxResultSize: 1G
    }

    cores {
      max: 16
    }
  }

  # Nebula Graph relation config
  nebula: {
    addresses: ["127.0.0.1:3699"]
    user: user
    pswd: password
    space: test

    connection {
      timeout: 3000
      retry: 3
    }

    execution {
      retry: 3
    }

    error: {
      max: 32
      output: /tmp/errors
    }

    rate: {
      limit: 1024
      timeout: 1000
    }
  }

  # Processing tags
  tags: [

    # Loading tag from neo4j
    {
      name: tag-name-0
      type: {
        source: neo4j
        sink: client
      }
      server: "bolt://127.0.0.1:7687"
      user: neo4j
      password: neo4j
      exec: "match (n:label) return n.neo4j-field-0 as neo4j-field-0, n.neo4j-field-1 as neo4j-field-1"
      fields: {
        neo4j-field-0: nebula-field-0,
        neo4j-field-1: nebula-field-1
      }
      vertex: neo4j-field-0
      partition: 10
      batch: 1000
      check_point_path: /tmp/test
    }

    # Loading from janus graph
    {
      name: tag-name-1
      type: {
        source: janus graph
        sink: client
      }
      host:127.0.0.1
      port:8182
      label: janus-vertex-label
      fields: {
        janus-field-0: nebula-field-0,
        janus-field-1: nebula-field-1,
        janus-field-2: nebula-field-2
      }
      vertex: janus-field-0
      partition: 10
      batch: 1000
      check_point_path: /tmp/test
    }
  ]

  # Processing edges
  edges: [

    # Loading from neo4j
    {
      name: edge-name-0
      type: {
        source: neo4j
        sink: client
      }
      server: "bolt://127.0.0.1:7687"
      user: neo4j
      password: neo4j
      exec: "match (a:vertex_label)-[r:edge_label]->(b:vertex_label) return a.neo4j-source-field, b.neo4j-target-field, r.neo4j-field-0 as neo4j-field-0, r.neo4j-field-1 as neo4j-field-1"
      fields: {
        neo4j-field-0: nebula-field-0,
        neo4j-field-1: nebula-field-1,
      }
      source: {
        field: a.neo4j-source-field
        policy: "hash"
      }
      target: {
        field: b.neo4j-target-field
        policy: "uuid"
      }
      partition: 10
      batch: 1000
      check_point_path: /tmp/test
    }

    # Loading from janus graph
    {
      name: edge-name-1
      type: {
        source: janus graph
        sink: client
      }
      fields: {
        janus-field-0: nebula-field-0,
        janus-field-1: nebula-field-1,
        janus-field-2: nebula-field-2
      }
      partition: 10
      batch: 10
      host:127.0.0.1
      port:8182
      label: janus-edge-label
      fields: {
        janus-field-0: nebula-field-0,
        janus-field-1: nebula-field-1,
        janus-field-2: nebula-field-2
      }
      source: {
        field: IN.id
      }
      target: {
        field: OUT.id
      }
      partition: 10
      batch: 1000
      check_point_path: /tmp/test
    }
  ]
}
