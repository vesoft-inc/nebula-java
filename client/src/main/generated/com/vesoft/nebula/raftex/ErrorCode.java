/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.vesoft.nebula.raftex;


import java.lang.reflect.*;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import com.facebook.thrift.IntRangeSet;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({ "unused" })
public class ErrorCode {
  public static final int SUCCEEDED = 0;
  public static final int E_LOG_GAP = -1;
  public static final int E_LOG_STALE = -2;
  public static final int E_MISSING_COMMIT = -3;
  public static final int E_WAITING_SNAPSHOT = -4;
  public static final int E_UNKNOWN_PART = -5;
  public static final int E_TERM_OUT_OF_DATE = -6;
  public static final int E_LAST_LOG_TERM_TOO_OLD = -7;
  public static final int E_BAD_STATE = -8;
  public static final int E_WRONG_LEADER = -9;
  public static final int E_WAL_FAIL = -10;
  public static final int E_NOT_READY = -11;
  public static final int E_HOST_STOPPED = -12;
  public static final int E_NOT_A_LEADER = -13;
  public static final int E_HOST_DISCONNECTED = -14;
  public static final int E_TOO_MANY_REQUESTS = -15;
  public static final int E_PERSIST_SNAPSHOT_FAILED = -16;
  public static final int E_BAD_ROLE = -17;
  public static final int E_EXCEPTION = -20;

  public static final IntRangeSet VALID_VALUES;
  public static final Map<Integer, String> VALUES_TO_NAMES = new HashMap<Integer, String>();

  static {
    try {
      Class<?> klass = ErrorCode.class;
      for (Field f : klass.getDeclaredFields()) {
        if (f.getType() == Integer.TYPE) {
          VALUES_TO_NAMES.put(f.getInt(null), f.getName());
        }
      }
    } catch (ReflectiveOperationException e) {
      throw new AssertionError(e);
    }

    int[] values = new int[VALUES_TO_NAMES.size()];
    int i = 0;
    for (Integer v : VALUES_TO_NAMES.keySet()) {
      values[i++] = v;
    }

    VALID_VALUES = new IntRangeSet(values);
  }
}
