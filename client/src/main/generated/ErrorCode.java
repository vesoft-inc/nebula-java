/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import com.facebook.thrift.IntRangeSet;
import java.util.Map;
import java.util.HashMap;

@SuppressWarnings({ "unused" })
public enum ErrorCode implements com.facebook.thrift.TEnum {
  SUCCEEDED(0),
  E_UNKNOWN_PART(-1),
  E_LOG_GAP(-2),
  E_LOG_STALE(-3),
  E_TERM_OUT_OF_DATE(-4),
  E_WAITING_SNAPSHOT(-5),
  E_BAD_STATE(-6),
  E_WRONG_LEADER(-7),
  E_NOT_READY(-8),
  E_BAD_ROLE(-9),
  E_WAL_FAIL(-10),
  E_HOST_STOPPED(-11),
  E_TOO_MANY_REQUESTS(-12),
  E_PERSIST_SNAPSHOT_FAILED(-13),
  E_RPC_EXCEPTION(-14),
  E_NO_WAL_FOUND(-15);

  private final int value;

  private ErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ErrorCode findByValue(int value) { 
    switch (value) {
      case 0:
        return SUCCEEDED;
      case -1:
        return E_UNKNOWN_PART;
      case -2:
        return E_LOG_GAP;
      case -3:
        return E_LOG_STALE;
      case -4:
        return E_TERM_OUT_OF_DATE;
      case -5:
        return E_WAITING_SNAPSHOT;
      case -6:
        return E_BAD_STATE;
      case -7:
        return E_WRONG_LEADER;
      case -8:
        return E_NOT_READY;
      case -9:
        return E_BAD_ROLE;
      case -10:
        return E_WAL_FAIL;
      case -11:
        return E_HOST_STOPPED;
      case -12:
        return E_TOO_MANY_REQUESTS;
      case -13:
        return E_PERSIST_SNAPSHOT_FAILED;
      case -14:
        return E_RPC_EXCEPTION;
      case -15:
        return E_NO_WAL_FOUND;
      default:
        return null;
    }
  }
}
